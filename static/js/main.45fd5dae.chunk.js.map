{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","app","useRef","circle","circleRed","circleBlue","useState","state","setState","useEffect","TweenMax","to","css","visibility","staggerFrom","opacity","x","ease","Power3","easeOut","ref","el","className","onClick","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAmDeA,MA/Cf,WACE,IAAIC,EAAMC,iBAAO,MACbC,EAASD,iBAAO,MAChBE,EAAYF,iBAAO,MACnBG,EAAaH,iBAAO,MAJX,EAMaI,oBAAS,GANtB,mBAMNC,EANM,KAMCC,EAND,KAyBb,OARAC,qBAAU,WACRC,IAASC,GAAGV,EAAK,EAAG,CAAEW,IAAK,CAAEC,WAAY,aAKzCH,IAASI,YAAY,CAACX,EAAQC,EAAWC,GAAa,GAAI,CAAEU,QAAS,EAAGC,EAAG,GAAIC,KAAMC,IAAOC,SAAW,MACtG,IAED,qBACEC,IAAK,SAAAC,GAAE,OAAIpB,EAAMoB,GACjBC,UAAU,MAFZ,SAGE,wBAAQA,UAAU,aAAlB,SACE,sBAAKA,UAAU,mBAAf,UACE,qBACEF,IAAK,SAAAC,GAAE,OAAIlB,EAASkB,GACpBC,UAAU,WACZ,qBACEC,SAAmB,IAAVhB,EA5BE,WACnBG,IAASC,GAAGP,EAAW,GAAI,CAAEoB,MAAO,IAAKC,OAAQ,IAAKR,KAAMC,IAAOC,UACnEX,GAAS,IAEU,WACnBE,IAASC,GAAGP,EAAW,GAAI,CAAEoB,MAAO,GAAIC,OAAQ,GAAIR,KAAMC,IAAOC,UACjEX,GAAS,IAuBDY,IAAK,SAAAC,GAAE,OAAIjB,EAAYiB,GACvBC,UAAU,eACZ,qBACEF,IAAK,SAAAC,GAAE,OAAIhB,EAAagB,GACxBC,UAAU,wBChCPI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.45fd5dae.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { TweenMax, Power3 } from 'gsap';\r\n\r\nfunction App() {\r\n  let app = useRef(null)\r\n  let circle = useRef(null)\r\n  let circleRed = useRef(null)\r\n  let circleBlue = useRef(null)\r\n\r\n  const [state, setState] = useState(false)\r\n  const handleExpand = () => {\r\n    TweenMax.to(circleRed, .8, { width: 200, height: 200, ease: Power3.easeOut })\r\n    setState(true)\r\n  }\r\n  const handleShrink = () => {\r\n    TweenMax.to(circleRed, .8, { width: 75, height: 75, ease: Power3.easeOut })\r\n    setState(false)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    TweenMax.to(app, 0, { css: { visibility: 'visible' } })\r\n    // TweenMax.from(circle, .8, { opacity: 0, x: 40, ease: Power3.easeOut })\r\n    // TweenMax.from(circleRed, .8, { opacity: 0, x: 40, ease: Power3.easeOut, delay: .2 })\r\n    // TweenMax.from(circleBlue, .8, { opacity: 0, x: 40, ease: Power3.easeOut, delay: .4 })\r\n    //or siplify\r\n    TweenMax.staggerFrom([circle, circleRed, circleBlue], .8, { opacity: 0, x: 40, ease: Power3.easeOut }, .2)\r\n  }, [])\r\n  return (\r\n    <div\r\n      ref={el => app = el}\r\n      className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"circle-container\">\r\n          <div\r\n            ref={el => circle = el}\r\n            className=\"circle\"></div>\r\n          <div\r\n            onClick={state !== true ? handleExpand : handleShrink}\r\n            ref={el => circleRed = el}\r\n            className=\"circle red\"></div>\r\n          <div\r\n            ref={el => circleBlue = el}\r\n            className=\"circle blue\"></div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}